import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
import os

#  Configuraci√≥n general 
st.set_page_config(page_title="üååSistemas Din√°micos Discretos", layout="wide")

# Barra lateral: men√∫ de navegaci√≥n 
st.sidebar.title("üååSistemas Din√°micos Discretos")
st.sidebar.title("Men√∫")
page = st.sidebar.radio(
    "Selecciona la secci√≥n:",
    [
        "Introducci√≥n",
        "Explicaci√≥n paso a paso (Parte 1)",
        "Explicaci√≥n paso a paso (Parte 2)",
        "P√°gina interactiva: Mapa Log√≠stico",
        "P√°gina interactiva: Caminata Aleatoria",
        "P√°gina interactiva: Mapas Avanzados",
        "Autores"
    ]
)

# Carpeta de im√°genes 
img_folder = "./imagenes_intro/"

# ======================
#  P√°gina 1: Introducci√≥n 
# ======================
if page == "Introducci√≥n":
    st.title("üåå Sistemas Din√°micos Discretos")
    
    st.markdown("""
    Bienvenido a la exploraci√≥n de **sistemas din√°micos discretos**.  
    Esta p√°gina interactiva te permite descubrir c√≥mo **comportamientos complejos surgen de reglas simples**, 
    un concepto fundamental en matem√°ticas y ciencias.
    """)

    st.subheader("üîπ Conceptos Clave")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.image(os.path.join(img_folder, "estabilidad.png"), caption="Estabilidad: convergencia a un valor fijo")
        st.write("""
        üîπ La **estabilidad** aparece cuando un sistema din√°mico alcanza un valor fijo, 
        sin importar peque√±as perturbaciones.  
        Ejemplo cotidiano: una **taza de caf√© caliente** que, con el tiempo, siempre termina alcanzando la temperatura ambiente, 
    sin importar si al inicio estaba muy caliente o solo tibia.
        """)
    
    with col2:
        st.image(os.path.join(img_folder, "ciclo.png"), caption="Ciclo: oscilaci√≥n peri√≥dica")
        st.write("""
        üîπ Los **ciclos** ocurren cuando el sistema oscila entre un conjunto limitado de valores.  
        Ejemplo cotidiano: el **d√≠a y la noche**. La luz solar aumenta durante el d√≠a y disminuye en la noche, en un ciclo que se repite cada 24 horas.
        """)
    
    with col3:
        st.image(os.path.join(img_folder, "caos.png"), caption="Caos determinista")
        st.write("""
        üîπ El **caos determinista** surge cuando un sistema sigue reglas simples pero su comportamiento se vuelve impredecible a largo plazo.  
        Ejemplo cotidiano: el **clima**. Aunque las leyes f√≠sicas que lo gobiernan son deterministas, una peque√±a variaci√≥n en las condiciones iniciales (como la temperatura o presi√≥n en un lugar) puede cambiar por completo el pron√≥stico d√≠as despu√©s.
    """)



# ======================
#  P√°gina 2: Explicaci√≥n Paso a Paso 1 
# ======================
if page == "Explicaci√≥n paso a paso (Parte 1)":
    st.title("üìò Explicaci√≥n Paso a Paso (1/2)")

    # Introducci√≥n a la ecuaci√≥n log√≠stica
    st.markdown(
        """
        La **ecuaci√≥n log√≠stica discreta** es un modelo sencillo que describe c√≥mo evoluciona 
        una poblaci√≥n limitada por los recursos disponibles.  
        Aunque la ecuaci√≥n es simple, su comportamiento puede ser muy rico: puede 
        alcanzar **equilibrios estables**, entrar en **ciclos peri√≥dicos** o incluso mostrar **caos determinista**.  
        Este es un ejemplo cl√°sico de **sistema din√°mico no lineal** y sirve para estudiar 
        estabilidad y comportamiento de sistemas complejos.
        """
    )

    # Mostrar la ecuaci√≥n
    st.subheader("Ecuaci√≥n log√≠stica discreta")
    st.latex(r"x_{n+1} = r \, x_n \, (1 - x_n)")

    # Explicaci√≥n de los t√©rminos
    st.markdown("**Interpretaci√≥n de los t√©rminos:**")
    st.latex(r"x_n \in [0,1] \quad \text{fracci√≥n de la poblaci√≥n en el paso } n \ (0=\text{extinci√≥n}, 1=\text{m√°xima poblaci√≥n})")
    st.latex(r"r > 0 \quad \text{tasa de crecimiento de la poblaci√≥n}")
    st.latex(r"(1 - x_n) \quad \text{efecto de saturaci√≥n por recursos limitados}")

    # Resumen did√°ctico
    st.markdown(
        """
        **Resumen did√°ctico:**  
        
        - Para $0 < r < 1$: la poblaci√≥n disminuye hasta extinguirse.  
        - Para $1 \le r < 3$: la poblaci√≥n alcanza un **equilibrio estable**, donde peque√±as perturbaciones se corrigen solas.  
        - Para $r \ge 3$: comienzan a aparecer **ciclos peri√≥dicos** y eventualmente **caos**, donde la poblaci√≥n puede variar de manera compleja.
        """
    )

    # Explorador interactivo
    st.markdown("### Explora c√≥mo cambia la din√°mica seg√∫n \(r\)")
    r_example = st.slider("Par√°metro r", 0.0, 3.0, 2.5, 0.01)
    x0 = st.slider("Valor inicial x‚ÇÄ", 0.0, 1.0, 0.5, 0.01)
    n_iter = st.slider("N√∫mero de iteraciones", 20, 200, 50, 10)

    # Simulaci√≥n
    x = [x0]
    for i in range(1, n_iter):
        x.append(r_example * x[-1] * (1 - x[-1]))

    # Graficar con etiquetas
    fig, ax = plt.subplots(figsize=(8,4))
    ax.plot(range(n_iter), x,  linestyle='-', color='royalblue')
    ax.set_xlabel("Paso n")
    ax.set_ylabel("Poblaci√≥n normalizada $x_n$")
    ax.set_title("Evoluci√≥n de la poblaci√≥n seg√∫n $r$ y $x_0$")
    ax.grid(True)

    st.pyplot(fig)
    st.caption(
        "La curva muestra c√≥mo $x_n$ evoluciona paso a paso. Observa si se aproxima a un equilibrio o si aparecen ciclos/caos."
    )



# ======================
#  P√°gina 3: Explicaci√≥n Paso a Paso 2 
# ======================
elif page == "Explicaci√≥n paso a paso (Parte 2)":
    st.title("üìò Explicaci√≥n Paso a Paso (2/2)")
    
    st.markdown(
        """
        Cuando aumentamos el par√°metro $r$ en la ecuaci√≥n log√≠stica, la din√°mica de la poblaci√≥n cambia de manera sorprendente:  
        
        - Para $3 \le r < 3.57$, la poblaci√≥n ya no se estabiliza en un solo valor, sino que oscila entre varios valores en un **ciclo peri√≥dico**.  
          Por ejemplo, puede alternar entre dos valores distintos (ciclo de per√≠odo 2), luego cuatro (per√≠odo 4), y as√≠ sucesivamente.  
        - Para $r \ge 3.57$, el sistema entra en **caos determinista**, donde la poblaci√≥n var√≠a de forma aparentemente aleatoria, aunque seguimos usando reglas simples.  

        üîπ Este fen√≥meno ilustra un principio fundamental de los sistemas din√°micos: **peque√±as diferencias en las condiciones iniciales pueden generar resultados muy distintos**, especialmente cuando el sistema es ca√≥tico.
        """
    )

    # Par√°metros interactivos
    r_example = st.slider("Par√°metro r", 3.0, 4.0, 3.65, 0.01)
    n_iter = st.slider("N√∫mero de iteraciones", 50, 200, 190, 10)
    x0_1 = st.slider("Valor inicial x‚ÇÄ (trayectoria 1)", 0.0, 1.0, 0.5, 0.0001, format="%.5f")

    x0_2 = st.slider("Valor inicial x‚ÇÄ (trayectoria 2)", 0.0, 1.0, 0.5001, 0.0001, format="%.5f")


    # Simulaci√≥n
    x1 = [x0_1]
    x2 = [x0_2]
    for i in range(1, n_iter):
        x1.append(r_example * x1[-1] * (1 - x1[-1]))
        x2.append(r_example * x2[-1] * (1 - x2[-1]))

    # Graficar con etiquetas y leyenda
    fig, ax = plt.subplots(figsize=(8,4))
    ax.plot(range(n_iter), x1,  linestyle='-', color='royalblue', label=f"x0={x0_1}")
    ax.plot(range(n_iter), x2,  linestyle='-', color='tomato', label=f"x0={x0_2}")
    ax.set_xlabel("Paso n")
    ax.set_ylabel("Poblaci√≥n normalizada $x_n$")
    ax.set_title("Evoluci√≥n de la poblaci√≥n con condiciones iniciales cercanas")
    ax.grid(True)
    ax.legend()

    st.pyplot(fig)
    
    st.markdown(
        """
        üîç **Interpretaci√≥n did√°ctica:**  

        Observa c√≥mo, a pesar de que las dos trayectorias comienzan casi con el mismo valor inicial ($x_0 = 0.5$ y $x_0 = 0.5001$), con el tiempo divergen de manera significativa.  

        Esto muestra la **sensibilidad a las condiciones iniciales**, una caracter√≠stica clave del **caos determinista**.  
        Para valores menores de $r$, las trayectorias convergen a un equilibrio, pero al superar ciertos umbrales, aparecen ciclos y luego caos, reflejando la riqueza de comportamientos que un sistema simple puede presentar.
        """
    )

# ======================
#  P√°gina 4: Interactiva - Mapa Log√≠stico 
# ======================
elif page == "P√°gina interactiva: Mapa Log√≠stico":
    st.title("üéõÔ∏è Simulaci√≥n Interactiva: Mapa Log√≠stico")

    st.markdown(
        """
        La ecuaci√≥n log√≠stica discreta:

        $$x_{n+1} = r \, x_n \, (1 - x_n)$$

        - $x_n$: poblaci√≥n normalizada en el paso $n$ (0 = extinci√≥n, 1 = m√°xima poblaci√≥n)
        - $r$: tasa de crecimiento efectiva

        Esta ecuaci√≥n permite estudiar c√≥mo una poblaci√≥n crece y se estabiliza, 
        o c√≥mo puede entrar en ciclos y caos dependiendo de $r$.
        """
    )

    # Par√°metros interactivos
    x0 = st.slider("Valor inicial x‚ÇÄ", 0.0, 1.0, 0.5, 0.01)
    r = st.slider("Par√°metro r", 0.0, 4.0, 3.2, 0.01)
    n_iter = st.slider("N√∫mero de iteraciones", 50, 500, 200, 10)

    # Simulaci√≥n
    x = [x0]
    for i in range(1, n_iter):
        x.append(r * x[-1] * (1 - x[-1]))

    # Graficar con etiquetas y solo l√≠neas
    fig, ax = plt.subplots(figsize=(8,4))
    ax.plot(range(n_iter), x, linestyle='-', color='royalblue')
    ax.set_xlabel("Paso n")
    ax.set_ylabel("Poblaci√≥n normalizada $x_n$")
    ax.set_title("Evoluci√≥n de la poblaci√≥n - Mapa Log√≠stico")
    ax.grid(True)
    st.pyplot(fig)
    st.markdown("üîπ Ajusta $r$ y $x_0$ para explorar estabilidad, ciclos y caos.")

# ======================
#  P√°gina 5: Interactiva - Caminata Aleatoria 
# ======================
elif page == "P√°gina interactiva: Caminata Aleatoria":
    st.title("üé≤ Caminata Aleatoria 1D")

    st.markdown(
        r"""
        La **caminata aleatoria unidimensional** es un modelo estoc√°stico que representa 
        el desplazamiento de una part√≠cula sobre una l√≠nea discreta.  
        Sea \(X_n\) la posici√≥n de la part√≠cula en el paso \(n\), entonces:

        $$
        X_{n+1} = X_n + \xi_n, \quad \xi_n \in \{-1, +1\}
        $$

        donde \(Œæ_n\) es una variable aleatoria que toma valor \(+1\) con probabilidad \(p\) 
        y \(-1\) con probabilidad \(1-p\).  

        Este modelo permite estudiar **procesos estoc√°sticos**, difusi√≥n y c√≥mo peque√±as 
        diferencias en la probabilidad o el azar generan trayectorias muy distintas.
        """
    )

    # Par√°metros interactivos
    n_steps = st.slider("N√∫mero de pasos (n)", 50, 500, 200)
    prob_right = st.slider("Probabilidad de moverse a la derecha (p)", 0.0, 1.0, 0.5)

    # Simulaci√≥n
    X = [0]  # posici√≥n inicial
    for i in range(1, n_steps):
        movimiento = 1 if np.random.rand() < prob_right else -1
        X.append(X[-1] + movimiento)

    # Graficar con etiquetas y solo l√≠neas
    fig, ax = plt.subplots(figsize=(8, 4))
    ax.plot(range(n_steps), X, linestyle='-', color='forestgreen')
    ax.set_xlabel("Paso $n$")
    ax.set_ylabel("Posici√≥n $X_n$")
    ax.set_title("Evoluci√≥n de la caminata aleatoria 1D")
    ax.grid(True)

    st.pyplot(fig)
    st.markdown("üîπ Observa c√≥mo el azar genera trayectorias distintas para cada simulaci√≥n.")



# ======================
#  P√°gina 6: Interactiva - Mapas Avanzados 
# ======================
elif page == "P√°gina interactiva: Mapas Avanzados":
    st.title("üåÄ Mapas Avanzados")

    st.markdown(
        """
        Una variante es el **mapeo seno (sine map)**:

        $$x_{n+1} = r \cdot \sin(\pi x_n)$$

        Esta ecuaci√≥n introduce no linealidad extra, produciendo comportamientos m√°s complejos 
        y caos incluso para valores moderados de $r$.
        """
    )

    # Par√°metros interactivos
    x0 = st.slider("Valor inicial x‚ÇÄ", 0.0, 1.0, 0.5)
    r = st.slider("Par√°metro r", 0.0, 4.0, 2.5)
    n_iter = st.slider("N√∫mero de iteraciones", 50, 500, 200)

    # Simulaci√≥n
    x = [x0]
    for i in range(1, n_iter):
        x.append(r * np.sin(np.pi * x[-1]))

    # Graficar con etiquetas y solo l√≠neas
    fig, ax = plt.subplots(figsize=(8,4))
    ax.plot(range(n_iter), x, linestyle='-', color='purple')
    ax.set_xlabel("Paso n")
    ax.set_ylabel("Valor $x_n$")
    ax.set_title("Evoluci√≥n de la poblaci√≥n - Mapa Seno-Log√≠stico")
    ax.grid(True)
    st.pyplot(fig)
    st.markdown("üîπ Ajusta $r$ y $x_0$ para observar comportamientos complejos y ca√≥ticos.")

# ======================
# Secci√≥n: Autores
# ======================
elif page == "Autores":
    st.title("üë©‚Äçüî¨üë®‚Äçüî¨ Sobre los autores")
    
    st.markdown(
        """
        Este proyecto fue desarrollado por:

        **Itzel Alejandra √Ångeles D√≠az De Le√≥n**  
        - Ingeniera Qu√≠mica egresada de la Universidad Aut√≥noma Metropolitana, Unidad Azcapotzalco.  
        - Intereses: educaci√≥n, divulgaci√≥n cient√≠fica y desarrollo de estrategias pedag√≥gicas innovadoras en ciencias aplicadas.  
        - Experiencia en tutor√≠as de qu√≠mica y matem√°ticas, participaci√≥n en congresos y proyectos acad√©micos sobre qu√≠mica ambiental y tecnol√≥gica.

        **Baruj Furlong Oceguera**  
        - Ingeniero Qu√≠mico egresado de la Universidad Aut√≥noma Metropolitana, Unidad Azcapotzalco.  
        - Actualmente cursa la **Maestr√≠a en Ciencias Matem√°ticas Aplicadas e Industriales** en la UAM Iztapalapa.  
        - Intereses: teor√≠a de control, simulaci√≥n de procesos y sistemas din√°micos.  
        - Experiencia en investigaci√≥n aplicada, modelado de reactores y desarrollo de visualizaciones interactivas de sistemas din√°micos.

        üîπ Ambos autores colaboraron en el desarrollo de este material interactivo para la **divulgaci√≥n de sistemas din√°micos discretos** y su aplicaci√≥n en educaci√≥n y visualizaci√≥n cient√≠fica.
        """
    )
